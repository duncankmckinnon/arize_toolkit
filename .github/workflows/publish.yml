name: Publish Python Package

on:
  release:
    types: [created]
  # Optionally also trigger on specific tags format
  push:
    tags:
      - 'v*.*.*'  # e.g. v0.1.0, v1.0.0, etc.

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Configure Poetry
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        poetry config pypi-token.pypi "$PYPI_TOKEN"

    - name: Build and publish
      run: |
        poetry version $(git describe --tags --abbrev=0)
        poetry build
        poetry publish

    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: distribution-packages
        path: |
          dist/*.tar.gz
          dist/*.whl

    - name: Create release notes
      id: release_notes
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        # Extract tag name
        TAG_NAME=${GITHUB_REF#refs/tags/}
        # Generate simple release notes if needed
        echo "Generated release for $TAG_NAME" > release_notes.md
        echo "Version $(git describe --tags --abbrev=0)" >> release_notes.md
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Use GitHub CLI to create release with assets
        gh release create "${GITHUB_REF#refs/tags/}" ./dist/*.tar.gz ./dist/*.whl --notes-file release_notes.md --generate-notes 